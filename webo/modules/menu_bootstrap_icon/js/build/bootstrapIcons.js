!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.CKEditor5=t():(e.CKEditor5=e.CKEditor5||{},e.CKEditor5.bootstrapIcons=t())}(self,(()=>(()=>{var e={"ckeditor5/src/core.js":(e,t,s)=>{e.exports=s("dll-reference CKEditor5.dll")("./src/core.js")},"ckeditor5/src/ui.js":(e,t,s)=>{e.exports=s("dll-reference CKEditor5.dll")("./src/ui.js")},"ckeditor5/src/widget.js":(e,t,s)=>{e.exports=s("dll-reference CKEditor5.dll")("./src/widget.js")},"dll-reference CKEditor5.dll":e=>{"use strict";e.exports=CKEditor5.dll}},t={};function s(i){var o=t[i];if(void 0!==o)return o.exports;var n=t[i]={exports:{}};return e[i](n,n.exports,s),n.exports}s.d=(e,t)=>{for(var i in t)s.o(t,i)&&!s.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:t[i]})},s.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t);var i={};return(()=>{"use strict";s.d(i,{default:()=>d});var e=s("ckeditor5/src/core.js"),t=s("ckeditor5/src/ui.js");class o extends t.View{constructor(s){super(s.locale),this.searchInputView=this._createInput("Search icon (ie. chevron-down)");const i=s.config.get("bootstrapicons");let o=i.search_list,n=i.cdn;if(n.length){let e=document.createElement("link");e.rel="stylesheet",e.type="text/css",e.href=n,document.head.appendChild(e)}this.iconsBootstrap=new t.ListView,setTimeout((()=>this._createListIcons(o)),0);const r=this.iconsBootstrap.items._items;this.searchInputView.fieldView.on("input",(e=>{let t=e.source.element.value.toLowerCase().replace(/[_\-+]/g," ");sessionStorage.setItem("bootstrapIconSearch",t),r.forEach((e=>{const s=e.element.textContent.indexOf(t);e.element.style.display=-1!==s?"block":"none"}))})),this.saveButtonView=this._createButton("Save",e.icons.check,"ck-button-save"),this.saveButtonView.type="submit",this.cancelButtonView=this._createButton("Cancel",e.icons.cancel,"ck-button-cancel"),this.cancelButtonView.delegate("execute").to(this,"cancel"),this.childViews=this.createCollection([this.searchInputView,this.iconsBootstrap,this.saveButtonView,this.cancelButtonView]),this.setTemplate({tag:"form",attributes:{class:["ck","ck-bootstrapicon-form","ck-responsive-form"],tabindex:"-1"},children:this.childViews})}render(){super.render(),(0,t.submitHandler)({view:this})}focus(){this.childViews.first.focus()}_createInput(e){const s=new t.LabeledFieldView(this.locale,t.createLabeledInputText);s.label=e;let i=sessionStorage.getItem("bootstrapIconSearch");return i&&s.fieldView.bind("value").to(this,(e=>i)),s}_createButton(e,s,i){const o=new t.ButtonView;return o.set({label:e,icon:s,tooltip:!0,class:i}),o}_createIconBtn(e,s){const i=new t.ButtonView;i.set({label:s,tooltip:s,class:"bootstrapicon bi bi-"+e}),i.on("execute",(()=>{this.searchInputView.fieldView.element.value=e,this.searchInputView.fieldView.element.focus()}));const o=new t.ListItemView;return o.children.add(i),o}_createListIcons(e){e.forEach((e=>{let t=Array.isArray(e.searchTerms)?e.searchTerms:Object.values(e.searchTerms),s=this._createIconBtn(e.title,t.join(" "));this.iconsBootstrap.items.add(s)}))}}class n extends e.Plugin{init(){const e=this.editor;this._balloon=this.editor.plugins.get(t.ContextualBalloon),this.formView=this._createFormView(),e.ui.componentFactory.add("bootstrapIcons",(s=>{const i=e.commands.get("InsertIconCommand"),o=new t.ButtonView(s);return o.set({label:e.t("Bootstrap icons"),icon:'<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-info-square" viewBox="0 0 16 16">\n  <path d="M14 1a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1zM2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2z"/>\n  <path d="m8.93 6.588-2.29.287-.082.38.45.083c.294.07.352.176.288.469l-.738 3.468c-.194.897.105 1.319.808 1.319.545 0 1.178-.252 1.465-.598l.088-.416c-.2.176-.492.246-.686.246-.275 0-.375-.193-.304-.533zM9 4.5a1 1 0 1 1-2 0 1 1 0 0 1 2 0"/>\n</svg>',tooltip:!0}),o.bind("isOn","isEnabled").to(i,"value","isEnabled"),this.listenTo(o,"execute",(()=>{this._showUI()})),o}))}_createFormView(){const e=this.editor,s=new o(e);return this.listenTo(s,"bootstrapicon",(()=>{let t={icon:s.searchInputView.fieldView.element.value};e.execute("InsertIconCommand",t),this._hideUI()})),this.listenTo(s,"submit",(()=>{let t={icon:s.searchInputView.fieldView.element.value};e.execute("InsertIconCommand",t),this._hideUI()})),this.listenTo(s,"cancel",(()=>{this._hideUI()})),(0,t.clickOutsideHandler)({emitter:s,activator:()=>this._balloon.visibleView===s,contextElements:[this._balloon.view.element],callback:()=>this._hideUI()}),s}_hideUI(){this.formView.searchInputView.fieldView.value="",this.formView.element.reset(),this._balloon.remove(this.formView),this.editor.editing.view.focus()}_showUI(){let e=sessionStorage.getItem("bootstrapIconSearch");this.formView.searchInputView.fieldView.value=e,this._balloon.add({view:this.formView,position:this._getBalloonPositionData(),icon:"testIcon"}),this.formView.focus()}_getBalloonPositionData(){const e=this.editor.editing.view,t=e.document;let s=null;return s=()=>e.domConverter.viewRangeToDom(t.selection.getFirstRange()),{target:s}}}var r=s("ckeditor5/src/widget.js");class c extends e.Command{execute(e){const{model:t}=this.editor;t.change((t=>{let s="bi";""!==e.icon&&(s+=" bi-"+e.icon);const i={class:s},o=t.createElement("bootstrapIcons",i),n=t.createDocumentFragment();t.append(o,n),t.insertText(drupalSettings.icon,o),this.editor.model.insertContent(n)}))}refresh(){const{model:e}=this.editor,{selection:t}=e.document,s=e.schema.findAllowedParent(t.getFirstPosition(),"bootstrapIcons");this.isEnabled=null!==s}}class a extends e.Plugin{static get requires(){return[r.Widget]}init(){this._defineSchema(),this._defineConverters(),this._defineCommands()}_defineSchema(){this.editor.model.schema.register("bootstrapIcons",{isObject:!0,allowWhere:"$text",isInline:!0,allowAttributes:["class"]})}_defineConverters(){const{conversion:e}=this.editor;e.attributeToAttribute({model:"class",view:"class"}),e.for("downcast").elementToElement({model:"bootstrapIcons",view:"i"}),e.for("upcast").elementToElement({model:"bootstrapIcons",view:{name:"i",classes:"bootstrap-icon"}})}_defineCommands(){this.editor.commands.add("InsertIconCommand",new c(this.editor))}}class l extends e.Plugin{static get requires(){return[a,n]}static get pluginName(){return"BootstrapIcons"}}const d={BootstrapIcons:l}})(),i=i.default})()));